require('dotenv').config();
const mongoose = require('mongoose');

async function sendManualAlert() {
  try {
    console.log('üìß CR√âATION D\'ALERTE MANUELLE POUR TEST');
    
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/globegenius');
    console.log('‚úÖ Connexion MongoDB r√©ussie');
    
    // Sch√©ma d'alerte
    const Alert = mongoose.model('Alert', new mongoose.Schema({}, { strict: false }));
    const User = mongoose.model('User', new mongoose.Schema({}, { strict: false }));
    
    // Trouver votre utilisateur
    const user = await User.findOne({ email: 'moussa.oulare@orange.fr' });
    if (!user) {
      console.error('‚ùå Utilisateur non trouv√©');
      return;
    }
    
    console.log('üë§ Utilisateur trouv√©:', user.email);
    
    // Cr√©er une nouvelle alerte de test
    const testAlert = new Alert({
      origin: 'CDG',
      destination: 'NYC',
      airline: 'Air France',
      price: 299,
      discountPercentage: 65,
      expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000), // 24h
      detectedAt: new Date(),
      sentTo: [{
        user: user._id,
        sentAt: new Date(),
        opened: false,
        clicked: false,
        emailStatus: 'pending_api_activation' // Statut sp√©cial
      }],
      priceHistory: [],
      baggagePolicy: {
        cabin: {
          included: true,
          weight: '10kg',
          dimensions: '55x40x20cm'
        },
        checked: {
          included: true,
          weight: '23kg',
          price: 0,
          currency: 'EUR'
        }
      },
      testAlert: true, // Marquer comme alerte de test
      emailContent: {
        subject: `üéØ Vol Exceptionnel: ${299}‚Ç¨ Paris ‚Üí New York (-65%)`,
        htmlContent: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h1>üåü Alerte GlobeGenius</h1>
            <div style="background: #fef3c7; border: 2px solid #fbbf24; padding: 20px; border-radius: 12px; text-align: center;">
              <h2>‚úàÔ∏è Vol Exceptionnel D√©tect√© !</h2>
              <div style="font-size: 2rem; font-weight: bold; color: #059669;">299‚Ç¨</div>
              <p><strong>-65% de r√©duction</strong></p>
              <p>Paris CDG ‚Üí New York JFK</p>
              <p>Air France ‚Ä¢ D√©part demain</p>
            </div>
            <p>Temps de cr√©ation: ${new Date().toLocaleString('fr-FR')}</p>
            <p><em>Note: Cette alerte sera envoy√©e par email d√®s que l'API Brevo sera activ√©e.</em></p>
          </div>
        `
      }
    });
    
    await testAlert.save();
    
    console.log('‚úÖ ALERTE DE TEST CR√â√âE AVEC SUCC√àS !');
    console.log('üìß Alerte ID:', testAlert._id);
    console.log('‚úàÔ∏è Vol:', testAlert.origin, '‚Üí', testAlert.destination);
    console.log('üí∞ Prix:', testAlert.price, '‚Ç¨ (-' + testAlert.discountPercentage + '%)');
    console.log('üë§ Destinataire:', user.email);
    console.log('üïê Cr√©√©e le:', testAlert.detectedAt.toLocaleString('fr-FR'));
    
    console.log('\nüì± INSTRUCTIONS:');
    console.log('1. Cette alerte est maintenant visible dans votre dashboard admin');
    console.log('2. Une fois votre API Brevo activ√©e, relancez le syst√®me d\'alertes');
    console.log('3. L\'email sera automatiquement envoy√©');
    
    // Statistiques
    const totalAlerts = await Alert.countDocuments({});
    const userAlerts = await Alert.countDocuments({ 'sentTo.user': user._id });
    
    console.log('\nüìä STATISTIQUES:');
    console.log('- Total alertes syst√®me:', totalAlerts);
    console.log('- Alertes pour votre compte:', userAlerts);
    
    mongoose.disconnect();
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation de l\'alerte:', error);
  }
}

sendManualAlert();
